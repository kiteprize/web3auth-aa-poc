export interface Language {
  code: string;
  name: string;
  nativeName: string;
  flag: string;
  enabled: boolean;
}

export const SUPPORTED_LANGUAGES: Language[] = [
  { code: 'ko', name: 'Korean', nativeName: 'í•œêµ­ì–´', flag: 'ðŸ‡°ðŸ‡·', enabled: true },
  { code: 'en', name: 'English', nativeName: 'English', flag: 'ðŸ‡ºðŸ‡¸', enabled: true },
  { code: 'ja', name: 'Japanese', nativeName: 'æ—¥æœ¬èªž', flag: 'ðŸ‡¯ðŸ‡µ', enabled: true },
  { code: 'zh', name: 'Chinese', nativeName: 'ä¸­æ–‡', flag: 'ðŸ‡¨ðŸ‡³', enabled: true },
  { code: 'es', name: 'Spanish', nativeName: 'EspaÃ±ol', flag: 'ðŸ‡ªðŸ‡¸', enabled: true },
  { code: 'fr', name: 'French', nativeName: 'FranÃ§ais', flag: 'ðŸ‡«ðŸ‡·', enabled: true },
  { code: 'de', name: 'German', nativeName: 'Deutsch', flag: 'ðŸ‡©ðŸ‡ª', enabled: true }
];

export const DEFAULT_LANGUAGE = 'ko';
export const ENABLED_LANGUAGES = SUPPORTED_LANGUAGES.filter(lang => lang.enabled);
export const LANGUAGE_CODES = ENABLED_LANGUAGES.map(lang => lang.code);

// Type for language codes - provides compile-time safety
export type LanguageCode = typeof LANGUAGE_CODES[number];